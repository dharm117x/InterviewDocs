>>Data types available in TypeScript.
Built in Datatype:
-----------------
String: It represents a text value like “GeeksforGeeks”, or “Computer Science”.
Number: It represents the numbered values i.e. 2, 28, 99, etc.
Boolean: It stores true or false values.
Null: An empty value deliberately assigned to a variable.
Undefined: Represents a variable that is declared but not initialized.
any: Represents any value of any data type and any number of values of different data types.
void: Used to represent that a particular function is not going to return any value of any data type.

User Defined:
----------------
arrays: In typescript, arrays are used to store the multiple values of any kind of data type.
enums: A special class that specifies the constant variables.
classes: Used to store different data type values in the form of key-value pairs.
Interface: These represent the basic syntax and blueprint that an entity must adhere to.

>Declare variables in TypeScript?
-----------
var name: string = "GeeksforGeeks";
let name: string = "GeeksforGeeks";
const name: string = "GeeksforGeeks" // value will not change.

> type alias in TypeScript?
------------
type combinedType = number | boolean

>explicit variables in Typescript?
---------
let variable_name: data-type = value;
Ex:
let company_name: string = "GeeksforGeeks";

company_name = "Cricket";

company_name = 28; //Throws an error: Type '28' is not assignable to type 'string'.

>function with typed annotation in TypeScript?
------------

function annotedFunc(myName: string, age: number): string{
    return `My name is ${myName} and my age is ${age}.`;
}

console.log(annotedFunc("Emrit", 22));




