GIT setup:
----------------
git config --global user.email "dharm117x@gmail.com"
git config --global user.name "Dharmendra kumar"

git config --global core.autocrlf true
git config --global core.autocrlf false --windows

// Pulling first time repositary.
git clone https://github.com/dharm117x/InterviewDocs.git

Passwrod reset:
https://github.com/settings/tokens
genrate token:   

git remote -v
git remote show master
git remote rm master
git remote add origin https://github.com/dharm117x/microservice.git

git remote set-url origin https://dharm117x:token@github.com/dharm117x/Linux.git


Git Update:
--------------
git pull
git pull --rebase --autostash



Git repositry manage:
----------------------
1. Add all files in git repos:
git add --all
git add .
git status .

2. Commit locally:
git commit -m "hybris 6 b2c setup"

3. Git restore after add:
git restore --staged  core-customize/hybris/bin/custom/dkshop/dkshopcore/lib/jstl-1.2.jar

4. git remote update
git push

GIT branch manage:
------------------

git branch feature/test

git checkout -f develop : -f forcefully change with clean

git merge develop


GIt Reset
------------
git reset --hard
git checkout HEAD^ file/to/overwrite

git reset file/to/overwrite
git checkout file/to/overwrite
git checkout -- <file>

git stash

Git Clean
----------------
git clean -n to see a dry run.
git clean -f to force untracked file deletion.
git clean -f -d to remove untracked directories.
git clean -f -x to remove untracked .gitignore files.
Add the -i switch to do an interactive git clean.

Git Checkout
-----------------
git checkout master
git fetch origin
git reset --hard origin/master
git checkout -b newbranch

Git Patch:
--------------
git diff > mypatch.patch
git diff --cached > mypatch.patch

git apply mypatch.patch



GIT Ignore files
---------------------------
git rm --cached .project
git rm --cached .classpath
git rm --cached -r .settings
git rm --cached -r *

.gitignore
---------------
.metadata/

bin/
target/
build/

.class
.project
.classpath
.settings
