Kuberneties:Container Orchestration.
=====================================
Its is orchestratiaon and manage 1000 of microserive instnace.

Feature: Auto scaling, Service Dicscovery, Load Balancing, Self healing, Zero down time.

Cloud Neutrel: its work any cloud plateform.

Google kubeneties Engine(GKE) on Google cloud platform(GCF).

Kubernet not deploy container directly its deploy in pod(unique IP address) and containes multiple container and share same resource as localhost.

Kubernets cluster -> node(1-n) - > pod(1- n)
Note: Genrally one node have one container and in some case also add another helper container.


https://uklabs.kodekloud.com/courses/labs-kubernetes-for-the-absolute-beginners-hands-on/

https://learn.kodekloud.com/user/dashboard

dharm117.java@gmail.com
Nokia117#
Ex: Pod definition:

apiVersion: v1
kind: Pod
metadata:
  name: postgres
  labels:
    tier: db-tier
spec:
  containers:
    - name: postgres
      image: postgres
      env:
        - name: POSTGRES_PASSWORD
          value: mysecretpassword

{"apiVersion"=>"v1", "kind"=>"Pod", "metadata"=>{"name"=>"postgres", "labels"=>{"tier"=>"db-tier"}}, 
"spec"=>{"containers"=>[{"name"=>"postgres", "image"=>"postgres", 
"env"=>[{"name"=>"POSTGRES_PASSWORD", "value"=>"mysecretpassword"}]}]}}




commands:
==============
kubectl version --client
kubectl version --client --output=yaml

install minicube on local machine.
-----------------------------
minikube start
minikube start --no-vtx-check
minikube ssh -v 7
ssh -i ~/.minikube/machines/minikube/id_rsa docker@192.168.59.100

minikube kubectl -- get po -A
kubectl version
kubectl cluster-info

kubectl run nginx --image nginx
kubectl create -f pod-definition.yml
or
kubectl apply -f pod-definition.yml

kubectl get pods
kubectl get pods -o wide // pods plcaced on which node.
kubectl get pods -n kube-system

kubectl describe pod nginx
kubectl delete pod nginx
kubectl explain nginx

kubectl run redis --image=redis123 --dry-run=client -o yaml > redis.yml
kubectl create -f redis.yml
kubectl edit pod redis

kubectl expose pod nginx --type=NodePort --name=nginx-svc
kubectl expose pod nginx --type=NodePort --name=nginx-svc --port=8080

kubectl delete pods --all --all-namespaces
kubectl delete pods --all -A


-----------------REPLICA Controller---------------------Kind: ReplicationController
kubectl create -f rc-definition.yml
kubectl get rc
kubectl delete rc nginx


-----------------REPLICA SET---------------------Kind: ReplicaSet
kubectl create -f replicaset-definition.yml
kubectl replace -f replicaset-definition.yml // with file update with replcas=6

kubectl get replicaset
or
kubectl get rs
kubectl get rs -o wide

kubectl describe replicaset myapp-replicaset
kubectl edit replicaset myapp-replicaset
kubectl scale replicaset myapp-replicaset --replicas=2
kubectl delete replicaset myapp-replicaset
kubectl delete rs myapp-replicaset


------------------DEPLOYMENT---------Kind: Deployment
kubectl create deployment --help
kubectl create -f deployment.yml

kubectl create deployment httpd-fronent --image=httpd:2.4-alpine
kubectl create deployment httpd-fronent --image=httpd:2.4-alpine --replicas=2
kubectl edit deployment httpd-fronent
kubectl describe deployment httpd-fronent

kubectl scale  deployment/httpd-fronent --replicas=3

kubectl get deployment
or
kubectl get deploy

kubectl get rs
kubectl get pods
kubectl get all
kubectl get svc

kubectl get deployments,svc

-------------------Microservice----------docker run --links
kubectl get endpoints
kubectl describe service ngnix
kubectl edit service ngnix
kubectl delete service ngnix

kubectl get service -o wide
kubectl describe service --all-namespaces | grep -i nodeport


kubectl logs -f <pod_name>
kubectl logs --tail=50 <pod_name>


---------------PODS STOP--------------------

kubectl delete pod my-pod
kubectl delete pod my-pod --force
kubectl scale deployment my-deployment --replicas=0
kubectl scale deployment/<your-deployment> --replicas=0
